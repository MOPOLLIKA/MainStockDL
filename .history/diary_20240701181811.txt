---First tests with type-1 prediction model---
Model:
timestep = 3

data = FetchDataYF()
indicators = FetchIndicators()
entries = TransformDataIntoSequence1(data, indicators)
entries = TransformEntries(entries, 3, 2)
x_train, y_train = CreateDatasetFromEntries(entries)

model = keras.Sequential()
model.add(keras.Input(shape=(None, 3, )))
model.add(layers.Dense(64))
model.add(layers.Dense(1))

model.compile(optimizer=keras.optimizers.Adam(learning_rate=1e-5), loss=keras.losses.MeanSquaredError())
model.summary()
earlyStopping = keras.callbacks.EarlyStopping("val_loss", patience=5, restore_best_weights=True)
model.fit(x_train, y_train, batch_size=4, epochs=50, callbacks=earlyStopping, verbose=1, validation_split=0.2)

TestModel(model, x_train, y_train)

---Testing the accuracy with different indicators to filter them---
Accuracy with different data:

1. Input [close, volume, OBV]
Epoch 24/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 426us/step - loss: 3653.2368 - val_loss: 5747.6631
Epoch 31/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 541us/step - loss: 143742464.0000 - val_loss: 7522.5259
[[[1.65279999e+02 2.77610000e+06 3.94577159e+08]
  [1.65809998e+02 2.59420000e+06 3.97171362e+08]
  [1.67380005e+02 3.04940000e+06 4.00220739e+08]]

 [[1.67380005e+02 3.04940000e+06 4.00220739e+08]
  [1.68199997e+02 2.20710000e+06 4.02428002e+08]
  [1.70009995e+02 3.47550000e+06 4.05903497e+08]]]
tf.Tensor(
[[[171.98927]
  [169.98927]
  [195.98927]]

 [[195.98927]
  [167.98927]
  [185.98927]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]
 
 2. Input [close, volume, AD]
Epoch 19/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 380us/step - loss: 2115.7234 - val_loss: 1623.0956
Epoch 24/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 379us/step - loss: 3187.0737 - val_loss: 2958.4387
[[[1.65279999e+02 2.77610000e+06 5.28659975e+08]
  [1.65809998e+02 2.59420000e+06 5.30039432e+08]
  [1.67380005e+02 3.04940000e+06 5.31844784e+08]]

 [[1.67380005e+02 3.04940000e+06 5.31844784e+08]
  [1.68199997e+02 2.20710000e+06 5.33406019e+08]
  [1.70009995e+02 3.47550000e+06 5.34107544e+08]]]
tf.Tensor(
[[[119.99283]
  [119.99283]
  [115.99283]]

 [[115.99283]
  [127.99283]
  [127.99283]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

3. Input [close, volume, ADX]
Epoch 5/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 671us/step - loss: 8376.7109 - val_loss: 8025.9116
Epoch 9/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 642us/step - loss: 8442.4854 - val_loss: 8700.2686
[[[1.65279999e+02 2.77610000e+06 2.55218000e+01]
  [1.65809998e+02 2.59420000e+06 2.59552000e+01]
  [1.67380005e+02 3.04940000e+06 2.55887000e+01]]

 [[1.67380005e+02 3.04940000e+06 2.55887000e+01]
  [1.68199997e+02 2.20710000e+06 2.49067000e+01]
  [1.70009995e+02 3.47550000e+06 2.32927000e+01]]]
tf.Tensor(
[[[30.775642]
  [27.306892]
  [35.681892]]

 [[35.681892]
  [19.369392]
  [43.056892]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]
 
4. Input [close, volume, AROON]
Epoch 9/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 384us/step - loss: 15553.1025 - val_loss: 12127.3408
Epoch 13/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 383us/step - loss: 13165.8203 - val_loss: 13645.0781
[[[1.65279999e+02 2.77610000e+06 1.60000000e+01]
  [1.65809998e+02 2.59420000e+06 1.20000000e+01]
  [1.67380005e+02 3.04940000e+06 8.00000000e+00]]

 [[1.67380005e+02 3.04940000e+06 8.00000000e+00]
  [1.68199997e+02 2.20710000e+06 4.00000000e+00]
  [1.70009995e+02 3.47550000e+06 0.00000000e+00]]]
tf.Tensor(
[[[  4.047483 ]
  [ -1.5072044]
  [ 10.313108 ]]

 [[ 10.313108 ]
  [-13.741579 ]
  [ 20.53967  ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

5. Input [close, volume, RSI]
Epoch 12/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 383us/step - loss: 6203.8892 - val_loss: 5081.3027
Epoch 17/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 381us/step - loss: 7062.1396 - val_loss: 5543.6992
[[[1.65279999e+02 2.77610000e+06 7.60000000e+01]
  [1.65809998e+02 2.59420000e+06 7.20000000e+01]
  [1.67380005e+02 3.04940000e+06 6.80000000e+01]]

 [[1.67380005e+02 3.04940000e+06 6.80000000e+01]
  [1.68199997e+02 2.20710000e+06 6.40000000e+01]
  [1.70009995e+02 3.47550000e+06 6.00000000e+01]]]
tf.Tensor(
[[[58.557785]
  [54.534348]
  [60.846848]]

 [[60.846848]
  [46.10466 ]
  [65.6281  ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

6. Input [close, volume STOCH]
Epoch 20/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 376us/step - loss: 8870.2139 - val_loss: 7896.3501
Epoch 27/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 375us/step - loss: 48872.5352 - val_loss: 11258.6885
[[[1.65279999e+02 2.77610000e+06 3.71494000e+01]
  [1.65809998e+02 2.59420000e+06 3.88424000e+01]
  [1.67380005e+02 3.04940000e+06 4.36820000e+01]]

 [[1.67380005e+02 3.04940000e+06 4.36820000e+01]
  [1.68199997e+02 2.20710000e+06 4.60819000e+01]
  [1.70009995e+02 3.47550000e+06 5.10412000e+01]]]
tf.Tensor(
[[[43.25847 ]
  [38.66472 ]
  [45.57097 ]]

 [[45.57097 ]
  [27.445969]
  [50.69597 ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

7. Input [close, volume, CCI]
Epoch 10/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 383us/step - loss: 10870.1113 - val_loss: 12234.9902
Epoch 12/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 379us/step - loss: 10938.4121 - val_loss: 12121.6475
[[[1.65279999e+02 2.77610000e+06 2.41574000e+01]
  [1.65809998e+02 2.59420000e+06 3.49038000e+01]
  [1.67380005e+02 3.04940000e+06 5.27483000e+01]]

 [[1.67380005e+02 3.04940000e+06 5.27483000e+01]
  [1.68199997e+02 2.20710000e+06 7.67312000e+01]
  [1.70009995e+02 3.47550000e+06 8.96106000e+01]]]
tf.Tensor(
[[[ 13.756087 ]
  [  5.0685873]
  [  5.7248373]]

 [[  5.7248373]
  [-22.431414 ]
  [ -3.3064127]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

8. Input [close, volume, MACD]
Epoch 7/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 380us/step - loss: 8424.1055 - val_loss: 7674.8647
Epoch 11/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 379us/step - loss: 7783.6240 - val_loss: 8587.3691
[[[1.65279999e+02 2.77610000e+06 1.85823000e+01]
  [1.65809998e+02 2.59420000e+06 2.61748000e+01]
  [1.67380005e+02 3.04940000e+06 3.72698000e+01]]

 [[1.67380005e+02 3.04940000e+06 3.72698000e+01]
  [1.68199997e+02 2.20710000e+06 5.47944000e+01]
  [1.70009995e+02 3.47550000e+06 7.30300000e+01]]]
tf.Tensor(
[[[45.630634]
  [40.49001 ]
  [47.130634]]

 [[47.130634]
  [27.161884]
  [48.49001 ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

---Using standardized values for volumes and various indicators with StandardScaler from sklearn.preprocessing library---

1. Input [close, volumeStandardized2, OBV-Standardized2]
Epoch 50/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 253us/step - loss: 6.8888 - val_loss: 9.0142
Epoch 50/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 253us/step - loss: 6.8888 - val_loss: 9.0142
[[[ 1.65279999e+02 -6.22453588e-01 -1.42737272e+00]
  [ 1.65809998e+02 -6.84964252e-01 -1.12365086e+00]
  [ 1.67380005e+02 -5.27865713e-01 -6.83667409e-01]]

 [[ 1.67380005e+02 -5.27865713e-01 -6.83667409e-01]
  [ 1.68199997e+02 -8.17228753e-01  7.44927944e-03]
  [ 1.70009995e+02 -3.78734899e-01  7.23507388e-01]]]
tf.Tensor(
[[[165.49663]
  [165.99583]
  [167.49611]]

 [[167.49611]
  [168.26073]
  [169.94221]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

2. Input [close, volumeStandardized2, AD-Standardized2]
Epoch 43/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 249us/step - loss: 6.3102 - val_loss: 8.9785
Epoch 44/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 250us/step - loss: 7.0279 - val_loss: 8.9763
[[[165.27999878  -0.62245359   1.95036127]
  [165.80999756  -0.68496425   1.99203208]
  [167.38000488  -0.52786571   2.04864272]]

 [[167.38000488  -0.52786571   2.04864272]
  [168.19999695  -0.81722875   2.09722916]
  [170.00999451  -0.3787349    2.11576578]]]
tf.Tensor(
[[[165.25674]
  [165.78952]
  [167.34473]]

 [[167.34473]
  [168.1803 ]
  [169.95604]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]
 
3. Input [close, volumeStandardized2, ADX-Standardized2]
Epoch 29/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 254us/step - loss: 6.6289 - val_loss: 9.0085
Epoch 30/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 253us/step - loss: 6.5896 - val_loss: 8.9911
[[[165.27999878  -0.62245359  -0.4204363 ]
  [165.80999756  -0.68496425  -0.38448751]
  [167.38000488  -0.52786571  -0.41947235]]

 [[167.38000488  -0.52786571  -0.41947235]
  [168.19999695  -0.81722875  -0.48274623]
  [170.00999451  -0.3787349   -0.62918666]]]
tf.Tensor(
[[[165.27718]
  [165.81664]
  [167.3588 ]]

 [[167.3588 ]
  [168.20755]
  [169.94345]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

4. Input [close, volumeStandardized2, AROON-Standardized2]
Epoch 38/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 252us/step - loss: 6.0472 - val_loss: 8.9826
Epoch 40/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 250us/step - loss: 6.7802 - val_loss: 8.9869
[[[165.27999878  -0.62245359  -0.77848617]
  [165.80999756  -0.68496425  -0.88487207]
  [167.38000488  -0.52786571  -0.99085831]]

 [[167.38000488  -0.52786571  -0.99085831]
  [168.19999695  -0.81722875  -1.09636545]
  [170.00999451  -0.3787349   -1.20131563]]]
tf.Tensor(
[[[165.09988]
  [165.61935]
  [167.1507 ]]

 [[167.1507 ]
  [167.98358]
  [169.72362]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

5. Input [close, volumeStandardized2, RSI-Standardized2]
Epoch 49/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 253us/step - loss: 6.2983 - val_loss: 8.9862
Epoch 50/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 253us/step - loss: 6.7163 - val_loss: 9.0462
[[[165.27999878  -0.62245359   0.6329309 ]
  [165.80999756  -0.68496425   0.52577502]
  [167.38000488  -0.52786571   0.4183209 ]]

 [[167.38000488  -0.52786571   0.4183209 ]
  [168.19999695  -0.81722875   0.31061281]
  [170.00999451  -0.3787349    0.20269559]]]
tf.Tensor(
[[[165.24712]
  [165.77234]
  [167.32503]]

 [[167.32503]
  [168.14812]
  [169.92876]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

6. Input [close, volumeStandardized2, STOCH-Standardized2]
Epoch 47/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 252us/step - loss: 6.2748 - val_loss: 8.9975
Epoch 49/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 249us/step - loss: 6.2586 - val_loss: 8.9716
[[[165.27999878  -0.62245359  -1.12143291]
  [165.80999756  -0.68496425  -1.00248246]
  [167.38000488  -0.52786571  -0.67152963]]

 [[167.38000488  -0.52786571  -0.67152963]
  [168.19999695  -0.81722875  -0.50752711]
  [170.00999451  -0.3787349   -0.17124499]]]
tf.Tensor(
[[[165.19884]
  [165.7317 ]
  [167.27747]]

 [[167.27747]
  [168.12042]
  [169.87785]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

7. Input [close, volumeStandardized2, CCI-Standardized2]
Epoch 29/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 250us/step - loss: 6.6891 - val_loss: 9.0164
Epoch 30/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 250us/step - loss: 6.7040 - val_loss: 8.9822
[[[ 1.65279999e+02 -6.22453588e-01 -1.12818762e+00]
  [ 1.65809998e+02 -6.84964252e-01 -7.28057518e-01]
  [ 1.67380005e+02 -5.27865713e-01 -6.74371893e-02]]

 [[ 1.67380005e+02 -5.27865713e-01 -6.74371893e-02]
  [ 1.68199997e+02 -8.17228753e-01  8.16253653e-01]
  [ 1.70009995e+02 -3.78734899e-01  1.28699513e+00]]]
tf.Tensor(
[[[165.26624]
  [165.80374]
  [167.356  ]]

 [[167.356  ]
  [168.20992]
  [169.97   ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

8. Input [close, volumeStandardized2, MACD-Standardized2]
Epoch 27/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 252us/step - loss: 6.6652 - val_loss: 8.9702
Epoch 28/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 252us/step - loss: 6.0456 - val_loss: 9.0731
[[[ 1.65279999e+02 -6.22453588e-01 -1.42737272e+00]
  [ 1.65809998e+02 -6.84964252e-01 -1.12365086e+00]
  [ 1.67380005e+02 -5.27865713e-01 -6.83667409e-01]]

 [[ 1.67380005e+02 -5.27865713e-01 -6.83667409e-01]
  [ 1.68199997e+02 -8.17228753e-01  7.44927944e-03]
  [ 1.70009995e+02 -3.78734899e-01  7.23507388e-01]]]
tf.Tensor(
[[[165.07022]
  [165.6237 ]
  [167.22452]]

 [[167.22452]
  [168.09946]
  [169.96227]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

---The same results using custom standardization algorithm---

1. Input [close, volumeStandardized1, OBV-Standardized1]
Epoch 24/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 381us/step - loss: 6.3759 - val_loss: 9.0772
Epoch 25/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 380us/step - loss: 6.5047 - val_loss: 9.0809
[[[165.27999878  -0.46635635   0.87524614]
  [165.80999756  -0.50663352   0.88622552]
  [167.38000488  -0.40240746   0.89825613]]

 [[167.38000488  -0.40240746   0.89825613]
  [168.19999695  -0.58620229   0.9057627 ]
  [170.00999451  -0.29511527   0.9173881 ]]]
tf.Tensor(
[[[165.52917]
  [166.07573]
  [167.60005]]

 [[167.60005]
  [168.49312]
  [170.1806 ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

2. Input [close, volumeStandardized1, AD-Standardized1]
Epoch 29/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 394us/step - loss: 6.2867 - val_loss: 8.9992
Epoch 30/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 386us/step - loss: 6.3174 - val_loss: 8.9711
[[[165.27999878  -0.46635635   0.94886693]
  [165.80999756  -0.50663352   0.95363246]
  [167.38000488  -0.40240746   0.95950294]]

 [[167.38000488  -0.40240746   0.95950294]
  [168.19999695  -0.58620229   0.96402671]
  [170.00999451  -0.29511527   0.96563527]]]
tf.Tensor(
[[[165.2232 ]
  [165.75993]
  [167.2996 ]]

 [[167.2996 ]
  [168.1575 ]
  [169.8941 ]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

3. Input [close, volumeStandardized1, ADX-Standardized1]
Epoch 49/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 383us/step - loss: 6.5850 - val_loss: 8.9900
Epoch 50/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 379us/step - loss: 6.8510 - val_loss: 9.0206
[[[165.27999878  -0.46635635  -0.32583325]
  [165.80999756  -0.50663352  -0.29938284]
  [167.38000488  -0.40240746  -0.32512904]]

 [[167.38000488  -0.40240746  -0.32512904]
  [168.19999695  -0.58620229  -0.37072407]
  [170.00999451  -0.29511527  -0.47077314]]]
tf.Tensor(
[[[165.1634 ]
  [165.68898]
  [167.25484]]

 [[167.25484]
  [168.07263]
  [169.88403]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

4. Input [close, volumeStandardized1, AROON-Standardized1]
Epoch 29/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 387us/step - loss: 6.5618 - val_loss: 8.9721
Epoch 30/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 390us/step - loss: 6.6803 - val_loss: 8.9875
[[[165.27999878  -0.46635635  -0.56371754]
  [165.80999756  -0.50663352  -0.62377436]
  [167.38000488  -0.40240746  -0.67824523]]

 [[167.38000488  -0.40240746  -0.67824523]
  [168.19999695  -0.58620229  -0.72708112]
  [170.00999451  -0.29511527  -0.77037121]]]
tf.Tensor(
[[[165.26334]
  [165.79903]
  [167.32967]]

 [[167.32967]
  [168.19432]
  [169.91238]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

5. Input [close, volumeStandardized1, RSI-Standardized1]
Epoch 22/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 383us/step - loss: 7.6431 - val_loss: 8.9600
Epoch 23/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 389us/step - loss: 6.9334 - val_loss: 8.9565
[[[ 1.65279999e+02 -4.66356347e-01  4.73221235e-01]
  [ 1.65809998e+02 -5.06633521e-01  4.00955468e-01]
  [ 1.67380005e+02 -4.02407456e-01  3.24287486e-01]]

 [[ 1.67380005e+02 -4.02407456e-01  3.24287486e-01]
  [ 1.68199997e+02 -5.86202286e-01  2.43905010e-01]
  [ 1.70009995e+02 -2.95115265e-01  1.60627033e-01]]]
tf.Tensor(
[[[165.23907]
  [165.78166]
  [167.33856]]

 [[167.33856]
  [168.19322]
  [8.9565]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

6. Input [close, volumeStandardized1, STOCH-Standardized1]
Epoch 20/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 386us/step - loss: 6.3993 - val_loss: 9.1208
Epoch 21/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 396us/step - loss: 6.7187 - val_loss: 8.9797
[[[ 1.65279999e+02 -4.66356347e-01 -7.37896366e-01]
  [ 1.65809998e+02 -5.06633521e-01 -6.83889364e-01]
  [ 1.67380005e+02 -4.02407456e-01 -4.98116811e-01]]

 [[ 1.67380005e+02 -4.02407456e-01 -4.98116811e-01]
  [ 1.68199997e+02 -5.86202286e-01 -3.88214978e-01]
  [ 1.70009995e+02 -2.95115265e-01 -1.35968866e-01]]]
tf.Tensor(
[[[165.30658]
  [165.83202]
  [167.38208]]

 [[167.38208]
  [168.19554]
  [169.97626]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

7. Input [close, volumeStandardized1, CCI-Standardized1]
Epoch 49/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 434us/step - loss: 6.7917 - val_loss: 9.0175
Epoch 50/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 378us/step - loss: 6.5418 - val_loss: 8.9900
[[[ 1.65279999e+02 -4.66356347e-01 -7.40759310e-01]
  [ 1.65809998e+02 -5.06633521e-01 -5.33421623e-01]
  [ 1.67380005e+02 -4.02407456e-01 -5.37663363e-02]]

 [[ 1.67380005e+02 -4.02407456e-01 -5.37663363e-02]
  [ 1.68199997e+02 -5.86202286e-01  5.85644924e-01]
  [ 1.70009995e+02 -2.95115265e-01  8.01904015e-01]]]
tf.Tensor(
[[[165.34912]
  [165.85635]
  [167.34781]]

 [[167.34781]
  [168.10776]
  [169.84807]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]

8. Input [close, volumeStandardized1, MACD-Standardized1]
Epoch 24/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 382us/step - loss: 6.8139 - val_loss: 8.9890
Epoch 25/50
616/616 ━━━━━━━━━━━━━━━━━━━━ 0s 380us/step - loss: 6.5890 - val_loss: 8.9757
[[[ 1.65279999e+02 -4.66356347e-01 -8.46527511e-01]
  [ 1.65809998e+02 -5.06633521e-01 -7.38838829e-01]
  [ 1.67380005e+02 -4.02407456e-01 -5.05814792e-01]]

 [[ 1.67380005e+02 -4.02407456e-01 -5.05814792e-01]
  [ 1.68199997e+02 -5.86202286e-01  5.94361008e-03]
  [ 1.70009995e+02 -2.95115265e-01  5.30631783e-01]]]
tf.Tensor(
[[[165.26015]
  [165.79518]
  [167.32048]]

 [[167.32048]
  [168.17126]
  [169.87392]]], shape=(2, 3, 1), dtype=float32)
[[[167.38000488 168.19999695 170.00999451]]

 [[170.00999451 170.38000488 169.32000732]]]


---Model type-2 would be to take slices of candles to predict the next one with ConvNet.
Another idea is to 
